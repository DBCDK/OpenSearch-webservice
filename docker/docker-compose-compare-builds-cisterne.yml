# compose file is used to test two existing docker builds against cisterne.
# It is not parameterised, you must change it to accomodate the test situation you are in.
# The main purpose is to test a "golden" version against a "tested" version, e.g. if you
# suspect a non-intended change in behaviour.

# golden: The container assumed to work correctly
# tested: The container assumed to potentially work incorrectly


# Use an extension (v3.4) to set up common configuration
x-info:
  environment: &common-env
    AAA_IP_LIST: 0.0.0.0-255.255.255.255
    # - AAA_FORS_RIGHTS: http://forsrights.addi.dk/1.2-opensearch/?action: forsRights&outputType: php&userIdAut: %s&groupIdAut: %s&passwordAut: %s&ipAddress: %s
    AAA_FORS_RIGHTS: ""
    # These settings are used for newer versions of OpenSearch
    VIPCORE_ENDPOINT: http://vipcore.iscrum-vip-prod.svc.cloud.dbc.dk/1.0/api/
    VIPCORE_CACHE_HOST: localhost
    VIPCORE_CACHE_PORT: 11211
    # This setting is used for the version 333 and older, and will eventually be retired
    AGENCY_END_POINT: http://openagency.addi.dk/2.34/
    AGENCY_FALLBACK: 100200
    AGENCY_PROFILE_FALLBACK: test
    FEDORA: http://corepo-content-service-replica.cisterne.svc.cloud.dbc.dk/rest/
    HOLDINGS_DB: http://holdings-service.cisterne.svc.cloud.dbc.dk/getAllAvailability?pid=%s
    HOLDINGS_ITEMS_INDEX: cisterne-corepo-searcher
    RAW_RECORD_CONTENT_SERVICE: http://rawrepo-content-service.cisterne.svc.cloud.dbc.dk/RawRepoContentService
    RAW_RECORD_REPOSITORY_NAME: prod-rawrecords
    RAW_RECORD_SOLR: http://cisterne.rawrepo.solr.dbc.dk:8983/solr/cisterne-rawrepo-searcher/select
    REPOSITORY_NAME: prod
    SERVICE_LOCATION: ""
    MY_DOMAIN_IP_LIST: 172.16.0.0-172.20.255.255;192.168.0.0-192.168.255.255;10.127.0.0-10.127.255.255
    SOLR: http://cisterne.solr.dbc.dk:8983/solr/cisterne-corepo-searcher/select
    VERBOSE_LEVEL: WARNING+ERROR+FATAL+STAT+TIMER+TRACE+DEBUG
    OPEN_FORMAT: http://openformat-php-master.frontend-prod.svc.cloud.dbc.dk/server.php
    URL_PATH: ''
    USE_HOLDING_BLOCK_JOIN: "yes"
  anchors:
    - &TESTED docker-os.dbc.dk/opensearch-webservice-5.2:389
    - &GOLDEN docker-os.dbc.dk/opensearch-webservice-5.2:389

version: '3.4'

services:

  # Redis cache is only used for testing against a configuration with a redis cache...

  # A redis service - can be used for testing external memcache
  redis:
    image: docker.dbc.dk/dbc-redis:latest
    expose:
      - 6379
    ports:
      - 6379

  # The images under test - both using internal memcaches
  golden:
    image: *GOLDEN
    environment:
      <<: *common-env
    ports:
      - "22222:80"

  tested:
    image: *TESTED
    environment:
      <<: *common-env
    ports:
      - "33333:80"

  tested-redis:
    image: *TESTED
    environment:
      <<: *common-env
      CACHE_TYPE: redis
      CACHE_HOST: redis
      CACHE_PORT: 6379
      CACHE_EXPIRE: 600
    ports:
      - "33333:80"

  tested-redis-cluster:
    image: *TESTED
    environment:
      <<: *common-env
      CACHE_TYPE: redis
      CACHE_HOST: os-opensearch-cisterne-redis-cluster.platform-redis.svc.cloud.dbc.dk
      CACHE_PORT: 6379
      CACHE_EXPIRE: 600
      CACHE_IS_CLUSTER: 1
    ports:
      - "33333:80"
