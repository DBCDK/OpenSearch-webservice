; Inifile for opensearch

[setup]
; To close a service, set service_http_error
; service status - values:
;service_http_error = HTTP/1.0 404 Not Found
;service_http_error = HTTP/1.1 410 Gone
;service_http_error = HTTP/1.0 503 Service Unavailable

version = 2.3

; wsdl for service
wsdl = opensearch.wsdl

; in_house_domain may use ?ShowInfo and use create_sample form
; in_house_domain = .mycompany.dk

; set to TRUE to expose the create_sample form
;show_samples = 1

; validate
;validate[soap_request] = soap.xsd
;validate[request] = opensearch.xsd
;validate[response] = opensearch.xsd

; soapActions and their corresponding request structure
; Can be found in the wsdl but is stated here for convenience
soapAction[search] = searchRequest
soapAction[getObject] = getObjectRequest


; prefixes and namespaces
xmlns[] = http://oss.dbc.dk/ns/opensearch
xmlns[xs] = http://www.w3.org/2001/XMLSchema
xmlns[xsi] = http://www.w3.org/2001/XMLSchema-instance
xmlns[oss] = http://oss.dbc.dk/ns/osstypes
xmlns[dc] = http://purl.org/dc/elements/1.1/
xmlns[dkabm] = http://biblstandard.dk/abm/namespace/dkabm/
xmlns[dcmitype] = http://purl.org/dc/dcmitype/
xmlns[dcterms] = http://purl.org/dc/terms/
xmlns[ac] = http://biblstandard.dk/ac/namespace/
xmlns[dkdcplus] = http://biblstandard.dk/abm/namespace/dkdcplus/
;xmlns[marcx] = http://www.bs.dk/standards/MarcXchange
xmlns[marcx] = info:lc/xmlns/marcxchange-v1
xmlns[docbook] = http://docbook.org/ns/docbook
xmlns[oso] = http://oss.dbc.dk/ns/opensearchobjects
;xmlns[dbcbibaddi] = http://oss.dbc.dk/rdf/dbcbibaddi#
;xmlns[dbcaddi] = http://oss.dbc.dk/rdf/dbcaddi#



; path to xml-examples
xmldir = ./xml

; default repository
default_repository = repos1

; url to solr and fedorainterface
; work_format = 2 fedora-object version bib.dk i.e. using units
; set url's for fedora_get_raw, fedora_get_rels_ext and fedora_get_object_profile
; - solr: url to solr-server
; - fedora_get_raw: url to get raw record from fedora
; - fedora_get_rels_ext: url to get rels_ext_record from fedora
; - fedora_get_object_profile: url to get rels_ext_record from fedora
; - search_profile_version: 2 (using submitter and original_format) or 3 (using rec.collectionIdentifier)
; - work_format: 1 or 2 (using unit's)

repository[repos1][solr] = http://someserver:8080/apache-solr-1.4-dev/select
repository[repos1][fedora_get_raw] = http://someserver.dbc.dk:8080/fedora/get/%s/originalData.0
repository[repos1][fedora_get_rels_ext] = http://someserver.dbc.dk:8080/fedora/get/%s/RELS-EXT
repository[repos1][fedora_get_object_profile] = http://someserver.dbc.dk:8080/fedora/objects/%s/?format=xml
repository[repos1][search_profile_version] = 3
repository[repos1][work_format] = 2

repository[repos2][solr] = http://anotherserver:8080/apache-solr-1.4-dev/select
repository[repos2][fedora_get_raw] = http://anotherserver.dbc.dk:8080/fedora/get/%s/originalData.0
repository[repos2][fedora_get_rels_ext] = http://anotherserver.dbc.dk:8080/fedora/get/%s/RELS-EXT
repository[repos2][fedora_get_object_profile] = http://anotherserver.dbc.dk:8080/fedora/objects/%s/?format=xml


; memcache
cache_host = localhost
cache_port = 11211
cache_expire = 600

; memcache search profile - defaults to cache_host, cache_port, cache_expire if not defined
;profile_cache_host = localhost
;profile_cache_port = 11211
profile_cache_expire = 60

; search profile service end point
open_agency = http://openagency.addi.dk/1.2/?action=openSearchProfile&agencyId=%s&profileVersion=%s

; open format
open_format = http://openformat.dbc.dk/0.1/

; default search_profile setting
;agency_fallback = 100200
;profile_fallback = test

; raw_index - old feature, do not include
;raw_index[] = facet.
;raw_index[] = phrase.

; relations which can be returned
; relations of type 1 points to internal objects
; relations of type 2 points to external objects
relation["dbcaddi:hasReview"] = 1
relation["dbcaddi:hasImage"] = 1
relation["dbcaddi:isReviewOf"] = 1
relation["dbcaddi:hasCover"] = 1
relation["dbcaddi:isCoverOf"] = 1
relation["dbcaddi:hasUserCreatedContent"] = 1
relation["dbcaddi:hasDemo"] = 1
relation["dbcaddi:hasTrailer"] = 1
relation["dbcaddi:hasTutorial"] = 1
relation["dbcaddi:hasRingtone"] = 1
relation["dbcaddi:isPartOfTheme"] = 1
relation["dbcaddi:hasThemeMember"] = 1
relation["dbcaddi:hasAuthorDescription"] = 1
relation["dbcaddi:hasSubjectDescription"] = 1
relation["dbcbib:hasTrack"] = 1
relation["dbcbib:isPartOfAlbum"] = 1
;relation["dbcbib:isPartOfManifestation"] = 1
relation["dbcbib:hasAnalysis"] = 1
relation["dbcbib:isAnalysisOf"] = 1
relation["dbcbib:hasFulltext"] = 1
relation["dbcaddi:hasSoundClip"] = 2
relation["dbcbib:hasCreatorHomePage"] = 2
relation["dbcbib:hasOnlineAccess"] = 2
relation["dbcbib:hasRemoteAccess"] = 2
relation["dbcbib:hasOnSiteAccess"] = 2
relation["dbcbib:hasPayPerView"] = 2
relation["dbcbib:hasOpenUrl"] = 2

relation["hasReview"] = 1
relation["hasImage"] = 1
relation["isReviewOf"] = 1
relation["hasCover"] = 1
relation["isCoverOf"] = 1
relation["hasUserCreatedContent"] = 1
relation["hasDemo"] = 1
relation["hasTrailer"] = 1
relation["hasTutorial"] = 1
relation["hasRingtone"] = 1
relation["isPartOfTheme"] = 1
relation["hasThemeMember"] = 1
relation["hasAuthorDescription"] = 1
relation["hasSubjectDescription"] = 1
relation["hasTrack"] = 1
relation["isPartOfAlbum"] = 1
;relation["isPartOfManifestation"] = 1
relation["hasAnalysis"] = 1
relation["isAnalysisOf"] = 1
relation["hasFulltext"] = 1
relation["hasSoundClip"] = 2
relation["hasCreatorHomePage"] = 2
relation["hasOnlineAccess"] = 2
relation["hasRemoteAccess"] = 2
relation["hasOnSiteAccess"] = 2
relation["hasPayPerView"] = 2
relation["hasOpenUrl"] = 2

; test relation["isMemberOfWork"] = 1

; scan objects for these formats
scan_format_table["dkabm:record"] = dkabm
scan_format_table["collection"] = marcxchange
scan_format_table["docbook:article"] = docbook
scan_format_table["oso:object"] = opensearchobject

; number of second to wait for a solr reply
solr_timeout = 30

; Max number of collection returned
max_collections = 50

; logfile for verbose output
logfile = /tmp/opensearch.log

; sorting & ranking
; rank[<rank_name>][<rank_parameter>][<rank_register>] = boost_value
;   rank_name is the sort-name that will trigger this ranking
;   rank_parameter, "word_boost", "phrase_boost" or "tie"
;   - must specify at least one word_boost and/or phrase_boost and just one tie
;   - boosts must be placed in descending boost order
;   rank_register name of register to rank towards
;   boost_value for rank_register
;

rank[rank_title][word_boost]["dc.title"] = 4
rank[rank_title][phrase_boost]["dc.title"] = 8
rank[rank_title][word_boost]["cql.anyIndexes"] = 1
rank[rank_title][phrase_boost]["cql.anyIndexes"] = 1
rank[rank_title][tie] = 0.1

rank[rank_creator][word_boost]["dc.creator"] = 4
rank[rank_creator][phrase_boost]["dc.creator"] = 8
rank[rank_creator][word_boost]["cql.anyIndexes"] = 1
rank[rank_creator][phrase_boost]["cql.anyIndexes"] = 1
rank[rank_creator][tie] = 0.1

rank[rank_general][word_boost]["dc.title"] = 3
rank[rank_general][phrase_boost]["dc.title"] = 6
rank[rank_general][word_boost]["dc.creator"] = 4
rank[rank_general][phrase_boost]["dc.creator"] = 8
rank[rank_general][word_boost]["dc.subject"] = 2
rank[rank_general][phrase_boost]["dc.subject"] = 3
rank[rank_general][word_boost]["cql.anyIndexes"] = 1
rank[rank_general][phrase_boost]["cql.anyIndexes"] = 1
rank[rank_general][tie] = 0.1

rank[rank_none][word_boost]["cql.anyIndexes"] = 0.1
rank[rank_none][phrase_boost]["cql.anyIndexes"] = 0.1
rank[rank_none][tie] = 1

sort[title_ascending] = sort.title asc
sort[title_descending] = sort.title desc
sort[creator_ascending] = sort.creator asc
sort[creator_descending] = sort.creator desc
sort[date_ascending] = sort.date asc
sort[date_descending] = sort.date desc
sort[acquisitionDate_ascending] = sort.acquisitionDate asc
sort[acquisitionDate_descending] = sort.acquisitionDate desc
sort[random] = random


; set verboselevel
;   WARNING - simple warnings
;   ERROR   - errors in response
;   FATAL   - major errors
;   STAT    - Stat√≠stical logging
;   TIMER   - timer logging
;   TRACE   - program trace
;   DEBUG   - debugging info
;   Z3959   - calls to z3950 services
;   OCI     - oracle
verbose = WARNING+ERROR+FATAL+STAT+TIMER+TRACE+DEBUG+Z3950+OCI

; format for automatic timer dump %s is the soap-action used
dump_timer = opensearch(%s)

[aaa]
; aaa Authentication, Access control and Accounting
;
; if aaa_credentials is set, the rights-object is created from
; aaa_ip_rights below if ip-match otherwise it is set from
; the FORS-server if aaa_credentials contains a valid fors-login
;
; oci credentials for FORS server
;aaa_credentials = some_user/some_pwd@some.server.dbc.dk
; memcache server - use localhost in one-webserver environment
;aaa_cache_address = localhost:11211
; number of seconds to cache authentication and access rights info
;aaa_cache_seconds = 3600
;
; As an alternative to FORS rights, rights can be set here for selected ip-addresses
; aaa_ip_rights[group-identifier][ip_list] = list of ip's
; aaa_ip_rights[group-identifier][ressource][<named ressource>] = right to <named ressource>
; aaa_ip_rights[group-identifier][ressource][<named ressource 2>] = right to <named ressource 2>
;
;aaa_ip_rights[dbc][ip_list] = 172.16.0.0-172.31.255.255;193.111.162.0-193.111.162.255
;aaa_ip_rights[dbc][ressource][opensearch] = 500


[rest]
; REST parameters for SOAPAction
;
; use xml.path.to.par notation to solve name-conflicts
; action[thisSoapAction][foo][] = some.number
; action[thisSoapAction][bar][] = another.number
; to build 
; <thisSoapAction>
;   <foo>
;     <number>nn</number>
;   </foo>
;   <bar>
;     <number>mm</number>
;   </bar>
; </thisSoapAction>
; from url: action=thisSoapAction&some.number=nn&another.number=mm
;
action[search][] = query
action[search][] = agency
action[search][] = profile
action[search][] = allObjects
action[search][] = callback
action[search][] = collectionType
action[search][facets][] = facets.numberOfTerms
action[search][facets][] = numberOfTerms
action[search][facets][] = facets.facetName
action[search][facets][] = facetName
action[search][] = includeHoldingsCount
action[search][] = includeMarcXchange
action[search][] = outputType
action[search][] = objectFormat
action[search][] = allRelations
action[search][] = relationData
action[search][] = repository
action[search][] = source
action[search][] = start
action[search][] = stepValue
action[search][] = rank
action[search][] = sort
;action[search][userDefinedBoost][] = userDefinedBoost.rank
;action[search][userDefinedBoost][userDefinedRanking][] = userDefinedBoost.userDefinedRanking.tieValue
;action[search][userDefinedBoost][userDefinedRanking][rankField][] = userDefinedBoost.userDefinedRanking.rankField.fieldName
;action[search][userDefinedBoost][userDefinedRanking][rankField][] = userDefinedBoost.userDefinedRanking.rankField.fieldType
;action[search][userDefinedBoost][userDefinedRanking][rankField][] = userDefinedBoost.userDefinedRanking.rankField.weight
;action[search][userDefinedBoost][boostField][] = userDefinedBoost.boostField.fieldName
;action[search][userDefinedBoost][boostField][] = userDefinedBoost.boostField.fieldType
;action[search][userDefinedBoost][boostField][] = userDefinedBoost.boostField.weight
;action[search][userDefinedRanking][] = userDefinedRanking.tieValue
;action[search][userDefinedRanking][rankField][] = userDefinedRanking.rankField.fieldName
;action[search][userDefinedRanking][rankField][] = userDefinedRanking.rankField.fieldType
;action[search][userDefinedRanking][rankField][] = userDefinedRanking.rankField.weight
action[search][] = queryDebug
action[search][] = trackingId

action[getObject][] = agency
action[getObject][] = profile
action[getObject][] = identifier
action[getObject][] = objectFormat
action[getObject][] = allRelations
action[getObject][] = callback
action[getObject][] = includeHoldingsCount
action[getObject][] = includeMarcXchange
action[getObject][] = outputType
action[getObject][] = relationData
action[getObject][] = repository
action[getObject][] = trackingId



[agency]
agency[710100] = (submitter:dbc AND original_format:(anmeld OR artikler OR matvurd OR dr_atlas OR dc_bonanza OR forfatterw OR faktalink)) OR (submitter:710100 AND original_format:katalog) OR (submitter:150014)
agency[775100] = (submitter:dbc AND original_format:(anmeld OR artikler OR matvurd OR dr_atlas OR dc_bonanza OR forfatterw OR faktalink)) OR (submitter:775100 AND original_format:(katalog OR ebsco OR ebrary)) OR (submitter:150014)
agency[150013] = (submitter:150013 AND original_format:(pg OR dbc)) OR submitter:150014



[howru]
test[] = search&query=danmark&stepValue=1
preg_match[] = hitCount
error[] = ERROR searching for danmark
