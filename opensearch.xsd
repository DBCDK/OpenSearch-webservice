<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:os="http://oss.dbc.dk/ns/opensearch" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dkabm="http://biblstandard.dk/abm/namespace/dkabm/" xmlns:ISO639-2="http://lcweb.loc.gov/standards/iso639-2/" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:ac="http://biblstandard.dk/ac/namespace/" xmlns:dkdcplus="http://biblstandard.dk/abm/namespace/dkdcplus/" xmlns:oss="http://oss.dbc.dk/ns/osstypes" xmlns:marcx="info:lc/xmlns/marcxchange-v1" xmlns:docbook="http://docbook.org/ns/docbook" xmlns:oso="http://oss.dbc.dk/ns/opensearchobjects" targetNamespace="http://oss.dbc.dk/ns/opensearch" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">Opensearch Service</xs:documentation>
		<xs:documentation xml:lang="en">This XML Schema describes the data and structure of data of the Opensearch search service.</xs:documentation>
		<xs:documentation xml:lang="en">This file is part of Open Library System.
Copyright Â© 2009, Dansk Bibliotekscenter a/s,  Tempovej 7-11, DK-2750 Ballerup, Denmark. CVR: 15149043

Open Library System is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

Open Library System is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with Open Library System.  If not, see http://www.gnu.org/licenses/</xs:documentation>
	</xs:annotation>
	<xs:import namespace="http://purl.org/dc/elements/1.1/" schemaLocation="dc.xsd"/>
	<xs:import namespace="http://biblstandard.dk/abm/namespace/dkabm/" schemaLocation="dkabm.xsd"/>
	<xs:import namespace="info:lc/xmlns/marcxchange-v1" schemaLocation="marcxchange-1-1.xsd"/>
	<xs:import namespace="http://docbook.org/ns/docbook" schemaLocation="docbook.xsd"/>
	<xs:import namespace="http://oss.dbc.dk/ns/opensearchobjects" schemaLocation="opensearchobjects.xsd"/>
	<xs:element name="getObjectRequest">
		<xs:annotation>
			<xs:documentation xml:lang="en">Request for a specific object.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:identifier"/>
				<xs:element ref="os:objectFormat"/>
				<xs:element ref="os:allRelations" minOccurs="0"/>
				<xs:element ref="os:relationData" minOccurs="0"/>
				<xs:element ref="os:repository" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="searchRequest">
		<xs:annotation>
			<xs:documentation xml:lang="en">Request for searching Open Search.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:query"/>
				<xs:element ref="os:agency" minOccurs="0"/>
				<xs:element ref="os:allObjects" minOccurs="0"/>
				<xs:element ref="os:authentication" minOccurs="0"/>
				<xs:element ref="os:callback" minOccurs="0"/>
				<xs:element ref="os:collectionType" minOccurs="0"/>
				<xs:element ref="os:facets" minOccurs="0"/>
				<xs:element ref="os:outputType" minOccurs="0"/>
				<xs:element ref="os:allRelations" minOccurs="0"/>
				<xs:element ref="os:relationData" minOccurs="0"/>
				<xs:element ref="os:repository" minOccurs="0"/>
				<xs:element ref="os:source" minOccurs="0"/>
				<xs:element ref="os:start" minOccurs="0"/>
				<xs:element ref="os:stepValue" minOccurs="0"/>
				<xs:choice minOccurs="0">
					<xs:element ref="os:rank"/>
					<xs:element ref="os:sort"/>
					<xs:element ref="os:userDefinedBoost"/>
					<xs:element ref="os:userDefinedRanking"/>
				</xs:choice>
				<xs:element ref="os:queryDebug" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="searchResponse">
		<xs:annotation>
			<xs:documentation xml:lang="en">The service response.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:element ref="os:result"/>
				<xs:element ref="os:error"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="agency" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identifier of the agency using this service</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="allObjects" type="xs:boolean">
		<xs:annotation>
			<xs:documentation xml:lang="en">If true, all objects in a collection will be returned, no matter if the objects are part of the search result. If false, only objects that are part of the search result will be returned.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="allRelations" type="xs:boolean">
		<xs:annotation>
			<xs:documentation xml:lang="en">Type of the relation from the list in relationTypeType.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="authentication">
		<xs:annotation>
			<xs:documentation xml:lang="en">Parameters used for authentication purposes</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:groupIdAut"/>
				<xs:element ref="os:passwordAut"/>
				<xs:element ref="os:userIdAut"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="boostField">
		<xs:annotation>
			<xs:documentation xml:lang="en">Specification of a specific field used in user defined boost.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:fieldName"/>
				<xs:element ref="os:fieldValue"/>
				<xs:element ref="os:weight"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="callback" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">If outputType=json.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="collection">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection in a search result will consist of one or more objects returned by the service, based on collectionType requested.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:resultPosition"/>
				<xs:element ref="os:numberOfObjects"/>
				<xs:element ref="os:object" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="collectionCount" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">Number of collections returned in the search result.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="collectionType" type="os:collectionTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">E.g presented as single manifestations or as collections of works.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="error" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">Message returned by the service, if an error occurs.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="facet">
		<xs:annotation>
			<xs:documentation xml:lang="en">Name of the facet that you want returned by the service.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:facetName"/>
				<xs:element ref="os:facetTerm" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="facetName" type="os:facetType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Name of the index that is used for the facet returned by the service. It has to be one of the names listed i facetType.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="facetResult">
		<xs:annotation>
			<xs:documentation xml:lang="en">Part of the search response.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:facet" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="facets">
		<xs:annotation>
			<xs:documentation xml:lang="en">Part of the search request.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:numberOfTerms" minOccurs="0"/>
				<xs:element ref="os:facetName" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="facetTerm">
		<xs:annotation>
			<xs:documentation xml:lang="en">A specific term in a facet in the search result.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:frequence"/>
				<xs:element ref="os:term"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="fieldName" type="os:fieldNameType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Name of field used in user defined ranking.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="fieldType" type="os:fieldTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Type of field used in user defined ranking.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="fieldValue" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">Specific field value for ranking, e.g. 'bog' (used in ranking of dc.type='bog')</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="format" type="os:objectFormatType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The format that you want the service to return.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="formatsAvailable">
		<xs:annotation>
			<xs:documentation xml:lang="en">The format that you want the service to return.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:format" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="frequence" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">Frequency of a specific facet term in the search result.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="groupIdAut">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identifier of the group (most often a library number) the user belongs to (for authentication purposes)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="hitCount" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">Number of objects in the search result.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="identifier" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">Unik identifier of an object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="more" type="xs:boolean">
		<xs:annotation>
			<xs:documentation xml:lang="en">Indicates whether the search result has more hits or the client has reached the end of the result.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="numberOfObjects" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">Number of objects in a collection in a search result.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="numberOfTerms" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">The number of terms that you want to be returned by the service in the facet requested. Used in the search request.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="object">
		<xs:annotation>
			<xs:documentation xml:lang="en">Representation of a digital object in the OpenSearch repository. An object might for example be a bibliographic record or a full text document. One of the formats that can be returned from the service.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:identifier"/>
				<xs:element ref="os:relations" minOccurs="0"/>
				<xs:element ref="os:formatsAvailable"/>
				<xs:choice>
					<xs:element ref="dkabm:record"/>
					<xs:element ref="marcx:collection"/>
					<xs:element ref="docbook:article"/>
					<xs:element ref="oso:object"/>
				</xs:choice>
				<xs:element ref="os:queryResultExplanation" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="objectFormat" type="os:objectFormatType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Here you can specify the sort order of the search result. Choose from the list in sortType.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="outputType" type="os:outputTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">E.g. xml, json or php.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="parsedQuery" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">The parsed version of the query sent to the search engine. Used for query debugging.</xs:documentation>
		</xs:annotation>
		</xs:element>
	<xs:element name="parsedQueryString" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">The parsed version of the query string sent to the search engine. Used for query debugging.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="passwordAut">
		<xs:annotation>
			<xs:documentation xml:lang="en">Password (for authentication purposes)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="query" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">The query language of this service is CQL, and the specific implementation of CQL in this service is described in the opensearch_cql.xml file.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="queryDebug" type="xs:boolean">
		<xs:annotation>
			<xs:documentation xml:lang="en">Use this paramter if you want to see how the service backend is handling your query. This is especially useful for debugging user defined ranking and boost.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="queryDebugResult">
		<xs:annotation>
			<xs:documentation xml:lang="en">Use this paramter if you want to see how the service backend is handling your query. This is especially useful for debugging user defined ranking and boost.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:rawQueryString"/>
				<xs:element ref="os:queryString"/>
				<xs:element ref="os:parsedQuery"/>
				<xs:element ref="os:parsedQueryString"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="queryResultExplanation" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">Description of the result from the search engine. Used for query debugging.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="queryString" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">The query sent to the search engine. Used for query debugging.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="rank" type="os:rankType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Here you can specify a predefined ranking of the search result. Choose from the list in rankType.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="rankField">
		<xs:annotation>
			<xs:documentation xml:lang="en">Specification of a specific field used in user defined ranking.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:fieldName"/>
				<xs:element ref="os:fieldType"/>
				<xs:element ref="os:weight"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="rawQueryString" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">The raw query sent to the search engine. Used for query debugging.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="relation">
		<xs:annotation>
			<xs:documentation xml:lang="en">A specific relation on an object.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:relationType"/>
				<xs:element ref="os:relationUri" minOccurs="0"/>
				<xs:element ref="os:relationObject" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="relationData" type="os:relationDataType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Type of the relation from the list in relationTypeType.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="relations">
		<xs:annotation>
			<xs:documentation xml:lang="en">If an object has relations, they will be present here.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:relation" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="relationObject">
		<xs:annotation>
			<xs:documentation xml:lang="en">The related object.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:object"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="relationType" type="os:relationTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Type of the relation from the list in relationTypeType.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="relationUri" type="xs:anyURI">
		<xs:annotation>
			<xs:documentation xml:lang="en">URI of the relation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="repository" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">Repository to search. Only need to be specified if different from default</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="result">
		<xs:annotation>
			<xs:documentation xml:lang="en">The search result from the service including collections, objects and relations.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:hitCount"/>
				<xs:element ref="os:collectionCount"/>
				<xs:element ref="os:more"/>
				<xs:element ref="os:searchResult" minOccurs="0"/>
				<xs:element ref="os:facetResult" minOccurs="0"/>
				<xs:element ref="os:queryDebugResult" minOccurs="0"/>
				<xs:element ref="os:time"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="resultPosition" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">The position of the collection in the search result.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="searchResult">
		<xs:annotation>
			<xs:documentation xml:lang="en">The result returned by the service. Might include both search result and facet result.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:collection" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="sort" type="os:sortType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Here you can specify the sort order of the search result. Choose from the list in sortType.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="source" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">The source of objects. Use this if you want to restrict your search to a specific source in the repository.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="start" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">The number of the first collection you want the service to return.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="stepValue" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">The number of collections you want the service to return, counted from the value in start.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="term" type="xs:string">
		<xs:annotation>
			<xs:documentation xml:lang="en">Facet term.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="tieValue" type="xs:decimal">
		<xs:annotation>
			<xs:documentation xml:lang="en">How much the final score of the query will be influenced by the scores of the lower scoring fields compared to the highest scoring field.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="time" type="xs:decimal">
		<xs:annotation>
			<xs:documentation xml:lang="en">Number of seconds used in the service</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="userDefinedBoost">
		<xs:annotation>
			<xs:documentation xml:lang="en">Here you can specify the sort order of the search result + boost on specific fields and field values. Choose from the list in sortType.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice minOccurs="0">
					<xs:element ref="os:rank"/>
					<xs:element ref="os:userDefinedRanking"/>
				</xs:choice>
				<xs:element ref="os:boostField" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="userDefinedRanking">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to define a custom ranking algorithm.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="os:tieValue" minOccurs="0"/>
				<xs:element ref="os:rankField" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="userIdAut">
		<xs:annotation>
			<xs:documentation xml:lang="en">User identifier (for authentication purposes)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="weight" type="xs:int">
		<xs:annotation>
			<xs:documentation xml:lang="en">...</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:simpleType name="collectionTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The types of collections that the service can return.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="manifestation"/>
			<xs:enumeration value="work"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="facetType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The facet types that can be returned by the service.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="facet.creator"/>
			<xs:enumeration value="facet.subject"/>
			<xs:enumeration value="facet.type"/>
			<xs:enumeration value="facet.date"/>
			<xs:enumeration value="facet.language"/>
			<xs:enumeration value="facet.geographic"/>
			<xs:enumeration value="facet.period"/>
			<xs:enumeration value="facet.form"/>
			<xs:enumeration value="facet.fiction"/>
			<xs:enumeration value="facet.nonFiction"/>
			<xs:enumeration value="facet.music"/>
			<xs:enumeration value="facet.dk5"/>
			<xs:enumeration value="facet.acSource"/>
			<xs:enumeration value="facet.category"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="fieldNameType">
		<xs:annotation>
			<xs:documentation xml:lang="en">...</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ac.source"/>
			<xs:enumeration value="dc.title"/>
			<xs:enumeration value="dc.creator"/>
			<xs:enumeration value="dc.subject"/>
			<xs:enumeration value="dc.description"/>
			<xs:enumeration value="dc.publisher"/>
			<xs:enumeration value="dc.contributor"/>
			<xs:enumeration value="dc.date"/>
			<xs:enumeration value="dc.type"/>
			<xs:enumeration value="dc.format"/>
			<xs:enumeration value="dc.identifier"/>
			<xs:enumeration value="dc.source"/>
			<xs:enumeration value="dc.language"/>
			<xs:enumeration value="dc.relation"/>
			<xs:enumeration value="dc.coverage"/>
			<xs:enumeration value="dc.rights"/>
			<xs:enumeration value="cql.anyIndexes"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="fieldTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">Ranking field as phrase or word.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="phrase"/>
			<xs:enumeration value="word"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="objectFormatType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The object formats that you can choose from to be returned by the service.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="dkabm"/>
			<xs:enumeration value="docbook"/>
			<xs:enumeration value="marcxchange"/>
			<xs:enumeration value="opensearchobject"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="outputTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The types of output that can be returned by the service.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="xml"/>
			<xs:enumeration value="json"/>
			<xs:enumeration value="php"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="rankType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The predefined rankings you can choose from.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="rank_general"/>
			<xs:enumeration value="rank_title"/>
			<xs:enumeration value="rank_creator"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="relationDataType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The types of relations that the service can return.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="type"/>
			<xs:enumeration value="uri"/>
			<xs:enumeration value="full"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="relationTypeType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The types of relations that the service can return.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="dbcaddi:hasReview"/>
			<xs:enumeration value="dbcaddi:isReviewOf"/>
			<xs:enumeration value="dbcaddi:hasAnalysis"/>
			<xs:enumeration value="dbcaddi:isAnalysisOf"/>
			<xs:enumeration value="dbcaddi:hasCover"/>
			<xs:enumeration value="dbcaddi:isCoverOf"/>
			<xs:enumeration value="dbcaddi:hasUserCreatedContent"/>
			<xs:enumeration value="dbcaddi:hasSoundClip"/>
			<xs:enumeration value="dbcaddi:hasDemo"/>
			<xs:enumeration value="dbcaddi:hasTrailer"/>
			<xs:enumeration value="dbcaddi:hasTutorial"/>
			<xs:enumeration value="dbcaddi:hasRingtone"/>
			<xs:enumeration value="dbcaddi:isPartOfTheme"/>
			<xs:enumeration value="dbcaddi:hasThemeMember"/>
			<xs:enumeration value="dbcaddi:hasAuthorDescription"/>
			<xs:enumeration value="dbcaddi:hasSubjectDescription"/>
			<xs:enumeration value="dbcaddi:hasCreatorHomePage"/>
			<xs:enumeration value="dbcaddi:hasFulltext"/>
			<xs:enumeration value="dbcbib:hasTrack"/>
			<xs:enumeration value="dbcbib:isPartOfAlbum"/>
			<xs:enumeration value="dbcbib:isPartOfManifestation"/>
			<xs:enumeration value="dbcaddi:hasOnlineAccess"/>
			<xs:enumeration value="dbcaddi:hasRemoteAccess"/>
			<xs:enumeration value="dbcaddi:hasOnSiteAccess"/>
			<xs:enumeration value="dbcaddi:hasPayPerView"/>
			<xs:enumeration value="dbcaddi:hasCreatorDescription"/>
			<xs:enumeration value="dcterms:creator"/>
			<xs:enumeration value="dcterms:references"/>
			<xs:enumeration value="dcterms:isReferencedBy"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="sortType">
		<xs:annotation>
			<xs:documentation xml:lang="en">The sort orders you can choose from.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="title_ascending"/>
			<xs:enumeration value="title_descending"/>
			<xs:enumeration value="creator_ascending"/>
			<xs:enumeration value="creator_descending"/>
			<xs:enumeration value="date_ascending"/>
			<xs:enumeration value="date_descending"/>
			<xs:enumeration value="random"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
