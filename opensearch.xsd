<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:os="http://oss.dbc.dk/ns/opensearch" targetNamespace="http://oss.dbc.dk/ns/opensearch" elementFormDefault="qualified">
  <xs:annotation>
    <xs:documentation xml:lang="en">Opensearch Service</xs:documentation>
    <xs:documentation xml:lang="en">This XML Schema describes the data and structure of data of the Opensearch search service.</xs:documentation>
    <xs:documentation xml:lang="en">This file is part of Open Library System.
Copyright Â© 2009, Dansk Bibliotekscenter a/s,  Tempovej 7-11, DK-2750 Ballerup, Denmark. CVR: 15149043

Open Library System is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

Open Library System is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with Open Library System.  If not, see http://www.gnu.org/licenses/</xs:documentation>
  </xs:annotation>
<!-- Include imports below if you need to validate responses against the schemas.
     When/if generating code for the service, at least dkabm and doocbook can cause errors -->
<!--
    <xs:import namespace="http://purl.org/dc/elements/1.1/" schemaLocation="dc.xsd"/>
    <xs:import namespace="http://biblstandard.dk/abm/namespace/dkabm/" schemaLocation="dkabm.xsd"/>
    <xs:import namespace="info:lc/xmlns/marcxchange-v1" schemaLocation="marcxchange-1-1.xsd"/>
-->
<!--
    <xs:import namespace="http://docbook.org/ns/docbook" schemaLocation="docbook.xsd"/>
    <xs:import namespace="http://oss.dbc.dk/ns/display" schemaLocation="display.xsd"/>
-->
  <xs:element name="getObjectRequest">
    <xs:annotation>
      <xs:documentation xml:lang="en">Request for a specific object.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:agency"/>
        <xs:element ref="os:profile"/>
        <xs:choice>
            <xs:element ref="os:identifier" maxOccurs="unbounded"/>
            <xs:element ref="os:localIdentifier" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:element ref="os:objectFormat" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="os:authentication" minOccurs="0"/>
        <xs:element ref="os:callback" minOccurs="0"/>
        <xs:element ref="os:includeHoldingsCount" minOccurs="0"/>
        <xs:element ref="os:outputType" minOccurs="0"/>
        <xs:element ref="os:relationData" minOccurs="0"/>
        <xs:element ref="os:repository" minOccurs="0"/>
        <xs:element ref="os:trackingId" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoRequest">
    <xs:annotation>
      <xs:documentation xml:lang="en">Get info about the setup and fields.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:agency"/>
        <xs:element ref="os:profile"/>
        <xs:element ref="os:callback" minOccurs="0"/>
        <xs:element ref="os:outputType" minOccurs="0"/>
        <xs:element ref="os:trackingId" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchRequest">
    <xs:annotation>
      <xs:documentation xml:lang="en">Request for searching Open Search.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:query"/>
        <xs:element ref="os:queryLanguage" minOccurs="0"/>
        <xs:element ref="os:agency"/>
        <xs:element ref="os:profile"/>
        <xs:element ref="os:allObjects" minOccurs="0"/>
        <xs:element ref="os:authentication" minOccurs="0"/>
        <xs:element ref="os:callback" minOccurs="0"/>
        <xs:element ref="os:collectionType" minOccurs="0"/>
        <xs:element ref="os:facets" minOccurs="0"/>
        <xs:element ref="os:includeHoldingsCount" minOccurs="0"/>
        <xs:element ref="os:objectFormat" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="os:outputType" minOccurs="0"/>
        <xs:element ref="os:relationData" minOccurs="0"/>
        <xs:element ref="os:repository" minOccurs="0"/>
        <xs:element ref="os:source" minOccurs="0"/>
        <xs:element ref="os:start" minOccurs="0"/>
        <xs:element ref="os:stepValue" minOccurs="0"/>
          <xs:choice>
            <xs:element ref="os:userDefinedRanking" minOccurs="0"/>
            <xs:element ref="os:sort" minOccurs="0" maxOccurs="unbounded"/>
          </xs:choice>
        <xs:element ref="os:userDefinedBoost" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="os:queryDebug" minOccurs="0"/>
        <xs:element ref="os:trackingId" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoResponse">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about the service setup.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:infoGenerel"/>
        <xs:element ref="os:infoRepositories"/>
        <xs:element ref="os:infoCqlIndexDocs"/>
        <xs:element ref="os:infoObjectFormats"/>
        <xs:element ref="os:infoSearchProfile"/>
        <xs:element ref="os:infoSorts"/>
        <xs:element ref="os:infoNameSpaces"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchResponse">
    <xs:annotation>
      <xs:documentation xml:lang="en">The service response.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice>
        <xs:element ref="os:result"/>
        <xs:element ref="os:error"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="access" type="os:accessType">
    <xs:annotation>
      <xs:documentation xml:lang="en">How to access the linked to resource (e.g. if it is free or not)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="accessType" type="os:accessTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Whether the access is to e.g. streaming or download</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="agency" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Identifier of the agency using this service</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="allObjects" type="xs:boolean">
    <xs:annotation>
      <xs:documentation xml:lang="en">If true, all objects in a collection will be returned, no matter if the objects are part of the search result. If false, only objects that are part of the search result will be returned.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="authentication">
    <xs:annotation>
      <xs:documentation xml:lang="en">Parameters used for authentication purposes</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:groupIdAut"/>
        <xs:element ref="os:passwordAut"/>
        <xs:element ref="os:userIdAut"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="callback" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">If outputType=json.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="collection">
    <xs:annotation>
      <xs:documentation xml:lang="en">A collection in a search result will consist of one or more objects returned by the service, based on collectionType requested.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:resultPosition"/>
        <xs:element ref="os:numberOfObjects"/>
        <xs:element ref="os:object" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="collectionCount" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Number of collections returned in the search result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="collectionIdentifier" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The internal identifier for the collection.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="collectionName" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of collection as seen in VIP.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="collectionType" type="os:collectionTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">E.g presented as single manifestations or as collections of works.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="cqlIndex">
    <xs:annotation>
      <xs:documentation xml:lang="en">One index definition document.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:indexName"/>
        <xs:element ref="os:indexSlop" minOccurs="0"/>
        <xs:element ref="os:indexAlias" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="cqlIndexDoc" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of xml index definition document.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="creationDate" type="xs:date">
    <xs:annotation>
      <xs:documentation xml:lang="en">The creation date of the original record or the object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="defaultRepository" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of default repository.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="error" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Message returned by the service, if an error occurs.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="facet">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of the facet that you want returned by the service.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:facetName"/>
        <xs:element ref="os:facetTerm" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="facetMinCount" type="xs:positiveInteger">
    <xs:annotation>
      <xs:documentation xml:lang="en">Minimum count to include in the facets.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="facetName" type="os:facetType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of the index that is used for the facet returned by the service. It has to be one of the names listed i facetType.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="facetResult">
    <xs:annotation>
      <xs:documentation xml:lang="en">Part of the search response.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:facet" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="facets">
    <xs:annotation>
      <xs:documentation xml:lang="en">Part of the search request.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:numberOfTerms" minOccurs="0"/>
        <xs:element ref="os:facetSort" minOccurs="0"/>
        <xs:element ref="os:facetMinCount" minOccurs="0"/>
        <xs:element ref="os:facetName" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="facetSort" type="os:facetSortType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The sorting order of the facets. count: sort the constraints by count (highest count first) - this is the default. index:to return the constraints sorted in their index order (lexicographic by indexed term). For terms in the ascii range, this will be alphabetically sorted.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="facetTerm">
    <xs:annotation>
      <xs:documentation xml:lang="en">A specific term in a facet in the search result.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:frequence"/>
        <xs:element ref="os:term"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="fedoraRecordsCached" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Number of records found in cache</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="fedoraRecordsRead" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Number of records read from fedora</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="fieldName" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of field used in user defined ranking.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="fieldNameAndWeight">
    <xs:annotation>
      <xs:documentation xml:lang="en"></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:fieldName"/>
        <xs:element ref="os:weight"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="fieldType" type="os:fieldTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Type of field used in user defined ranking.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="fieldValue" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Specific field value for ranking, e.g. 'bog' (used in ranking of dc.type='bog')</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="format" type="os:objectFormatType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The format that you want the service to return.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="formattedCollection">
    <xs:annotation>
      <xs:documentation xml:lang="en">The collection formatted by Open Format.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="formatsAvailable">
    <xs:annotation>
      <xs:documentation xml:lang="en">The format that you want the service to return.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:format" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="frequence" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Frequency of a specific facet term in the search result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="groupIdAut" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Identifier of the group (most often a library number) the user belongs to (for authentication purposes)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="hitCount" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Number of objects in the search result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="holdingsCount" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Approximate number of libraries that owns one ore more copies of the manifeatation.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="identifier" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Unique identifier of an object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="includeHoldingsCount" type="xs:boolean">
    <xs:annotation>
      <xs:documentation xml:lang="en">Whether to include holdings count if available (only on national level). Default is false.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="includeMarcXchange" type="xs:boolean">
    <xs:annotation>
      <xs:documentation xml:lang="en">Whether to include marcXchange record if available. Default is false.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="indexAlias">
    <xs:annotation>
      <xs:documentation xml:lang="en">One index alias definition document.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:indexName"/>
        <xs:element ref="os:indexSlop" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="indexName" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Exposed name of index.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="indexSlop" type="xs:integer">
    <xs:annotation>
      <xs:documentation xml:lang="en">The specific slop for the index.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="infoCqlIndexDocs">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about index definitions</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:infoCqlIndexDoc" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoCqlIndexDoc">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about index definitions</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:cqlIndexDoc"/>
        <xs:element ref="os:cqlIndex" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoGenerel">
    <xs:annotation>
      <xs:documentation xml:lang="en">Generel info.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:defaultRepository"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoObjectFormats">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about available objectFormats</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:objectFormat" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoRepositories">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about available repositories</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:infoRepository" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoRepository">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about one repository</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:repository"/>
        <xs:element ref="os:cqlIndexDoc" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoSearchProfile">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about actual search profile</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:searchCollection" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="os:relationTypes" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoSorts">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about available sort and ranking methods</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:infoSort" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoSort">
    <xs:annotation>
      <xs:documentation xml:lang="en">Specifying fields to rank by and the corresponding weights</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:sort"/>
        <xs:element ref="os:internalType"/>
        <xs:choice>
          <xs:element ref="os:rankDetails"/>
          <xs:element ref="os:sortDetails"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoNameSpaces">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about used namespaces</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:infoNameSpace" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="infoNameSpace">
    <xs:annotation>
      <xs:documentation xml:lang="en">Namespace prefix and uri</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:prefix"/>
        <xs:element ref="os:uri"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="internalType" type="os:internalTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about type of sort</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="lendingLibraries" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Number of libraries that will lend the material.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="linkCollectionIdentifier" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of collection containing the link</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="linkObject">
    <xs:annotation>
      <xs:documentation xml:lang="en">Description of a link (online access).</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:accessType" minOccurs="0"/>
        <xs:element ref="os:access" minOccurs="0"/>
        <xs:element ref="os:linkTo"/>
        <xs:element ref="os:linkCollectionIdentifier" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="linkTo" type="os:linkToType">
    <xs:annotation>
      <xs:documentation xml:lang="en">What the link point so, e.g. a website.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="localIdentifier" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Local identifier of a bibliographic record - faust, isbn, ...</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="more" type="xs:boolean">
    <xs:annotation>
      <xs:documentation xml:lang="en">Indicates whether the search result has more hits or the client has reached the end of the result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="prefix" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Prefix.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="uri" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation xml:lang="en">URI.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="numberOfObjects" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">Number of objects in a collection in a search result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="numberOfTerms" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">The number of terms that you want to be returned by the service in the facet requested. Used in the search request.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="object">
    <xs:annotation>
      <xs:documentation xml:lang="en">Representation of a digital object in the OpenSearch repository. An object might for example be a bibliographic record or a full text document. One of the formats that can be returned from the service.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
           <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="os:error"/>
        </xs:choice>
        <xs:element ref="os:identifier"/>
        <xs:element ref="os:primaryObjectIdentifier" minOccurs="0"/>
        <xs:element ref="os:recordStatus" minOccurs="0"/>
        <xs:element ref="os:creationDate" minOccurs="0"/>
        <xs:element ref="os:holdingsCount" minOccurs="0"/>
        <xs:element ref="os:lendingLibraries" minOccurs="0"/>
        <xs:element ref="os:relations" minOccurs="0"/>
        <xs:element ref="os:formatsAvailable" minOccurs="0"/>
        <xs:element ref="os:queryResultExplanation" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="objectFormat" type="os:objectFormatType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Here you can specify the sort order of the search result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="outputType" type="os:outputTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">E.g. xml, json or php.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="parsedQuery" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The parsed version of the query sent to the search engine. Used for query debugging.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="primaryObjectIdentifier" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Unique identifier of the primary bibliographic object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="rankFrequency">
    <xs:annotation>
      <xs:documentation xml:lang="en">The frequency of each searches made by rank_frequency</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="parsedQueryString" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The parsed version of the query string sent to the search engine. Used for query debugging.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="passwordAut" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Password (for authentication purposes)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="phrase">
    <xs:annotation>
      <xs:documentation xml:lang="en"></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:fieldNameAndWeight" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="profile" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The profile of sources to be searched.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="query" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The query language of this service is CQL, and the specific implementation of CQL in this service is described in the opensearch_cql.xml file.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="queryDebug" type="xs:boolean">
    <xs:annotation>
      <xs:documentation xml:lang="en">Use this paramter if you want to see how the service backend is handling your query. This is especially useful for debugging user defined ranking and boost.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="queryDebugResult">
    <xs:annotation>
      <xs:documentation xml:lang="en">Use this paramter if you want to see how the service backend is handling your query. This is especially useful for debugging user defined ranking and boost.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:rawQueryString"/>
        <xs:element ref="os:queryString"/>
        <xs:element ref="os:parsedQuery"/>
        <xs:element ref="os:parsedQueryString"/>
        <xs:element ref="os:rankFrequency" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="queryLanguage" type="os:queryLanguageType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Here you can specify the language of the user.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="queryResultExplanation" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Description of the result from the search engine. Used for query debugging.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="queryString" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The query sent to the search engine. Used for query debugging.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="rankDetails">
    <xs:annotation>
      <xs:documentation xml:lang="en"></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:word" minOccurs="0"/>
        <xs:element ref="os:phrase" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="rankField">
    <xs:annotation>
      <xs:documentation xml:lang="en">Specifying fields to rank by and the corresponding weights</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:fieldName"/>
        <xs:element ref="os:fieldType"/>
        <xs:element ref="os:weight"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchCollection">
    <xs:annotation>
      <xs:documentation xml:lang="en">One search collection</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:collectionName"/>
        <xs:element ref="os:collectionIdentifier"/>
        <xs:element ref="os:relationType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sortDetails">
    <xs:annotation>
      <xs:documentation xml:lang="en"></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:sort" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sortUsed" type="os:sortType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The actual sorting/ranking used</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="rawQueryString" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The raw query sent to the search engine. Used for query debugging.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="recordStatus" type="os:recordStatusType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The status of the returned record. active/delete.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="relation">
    <xs:annotation>
      <xs:documentation xml:lang="en">A specific relation on an object.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:relationType"/>
        <xs:element ref="os:relationUri" minOccurs="0"/>
        <xs:choice>
          <xs:element ref="os:linkObject" minOccurs="0"/>
          <xs:element ref="os:relationObject" minOccurs="0"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="relationData" type="os:relationDataType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Type of the relation from the list in relationTypeType.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="relations">
    <xs:annotation>
      <xs:documentation xml:lang="en">If an object has relations, they will be present here.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:relation" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="relationObject">
    <xs:annotation>
      <xs:documentation xml:lang="en">The related object.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:object"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="relationType" type="os:relationTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Type of the relation from the list in relationTypeType.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="relationTypes">
    <xs:annotation>
      <xs:documentation xml:lang="en">List of relationType.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:relationType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="relationUri" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">URI of the relation.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="repository" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Repository to search. Only need to be specified if different from default</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="result">
    <xs:annotation>
      <xs:documentation xml:lang="en">The search result from the service including collections, objects and relations.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:hitCount"/>
        <xs:element ref="os:collectionCount"/>
        <xs:element ref="os:more"/>
        <xs:element ref="os:sortUsed" minOccurs="0"/>
        <xs:element ref="os:searchResult" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="os:facetResult" minOccurs="0"/>
        <xs:element ref="os:queryDebugResult" minOccurs="0"/>
        <xs:element ref="os:statInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="resultPosition" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">The position of the collection in the search result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="searchResult">
    <xs:annotation>
      <xs:documentation xml:lang="en">The result returned by the service. Might include both search result and facet result.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="os:collection" maxOccurs="unbounded"/>
          <xs:element ref="os:formattedCollection" maxOccurs="unbounded"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sort" type="os:sortType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Here you can specify the sort or rank order of the search result.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="source" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The source of objects. Use this if you want to restrict your search to a specific source in the repository.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="start" type="xs:positiveInteger">
    <xs:annotation>
      <xs:documentation xml:lang="en">The number of the first collection you want the service to return.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="statInfo">
    <xs:annotation>
      <xs:documentation xml:lang="en">Info about the internal ressource usage.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:fedoraRecordsCached"/>
        <xs:element ref="os:fedoraRecordsRead"/>
        <xs:element ref="os:time"/>
        <xs:element ref="os:trackingId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="stepValue" type="xs:int">
    <xs:annotation>
      <xs:documentation xml:lang="en">The number of collections you want the service to return, counted from the value in start.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="term" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Facet term.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="tieValue" type="xs:decimal">
    <xs:annotation>
      <xs:documentation xml:lang="en">How much the final score of the query will be influenced by the scores of the lower scoring fields compared to the highest scoring field.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="time" type="xs:decimal">
    <xs:annotation>
      <xs:documentation xml:lang="en">Number of seconds used in the service</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="userDefinedBoost">
    <xs:annotation>
      <xs:documentation xml:lang="en">Specification of a specific field used in user defined boost.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:fieldName"/>
        <xs:element ref="os:fieldValue"/>
        <xs:element ref="os:weight"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="userDefinedRanking">
    <xs:annotation>
      <xs:documentation xml:lang="en"></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:tieValue"/>
        <xs:element ref="os:rankField" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="userIdAut" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">User identifier (for authentication purposes)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="weight" type="xs:float">
    <xs:annotation>
      <xs:documentation xml:lang="en">...</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="word">
    <xs:annotation>
      <xs:documentation xml:lang="en"></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="os:fieldNameAndWeight" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="accessType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="free"/>
      <xs:enumeration value="openurl"/>
      <xs:enumeration value="onsite"/>
      <xs:enumeration value="remote"/>
      <xs:enumeration value="uni-c"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="accessTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="download"/>
      <xs:enumeration value="rest"/>
      <xs:enumeration value="streaming"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="collectionTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The types of collections that the service can return.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="manifestation"/>
      <xs:enumeration value="work"/>
      <xs:enumeration value="work-1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="facetSortType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="count"/>
      <xs:enumeration value="index"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="facetType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Available facets can be found in infoCqlIndexDocs in infoResponse.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
    <xs:simpleType name="fieldTypeType">
        <xs:annotation>
            <xs:documentation xml:lang="en">Ranking field as phrase or word.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="phrase"/>
            <xs:enumeration value="word"/>
        </xs:restriction>
    </xs:simpleType>
  <xs:simpleType name="queryLanguageType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The languages you can choose from.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="bestMatch"/>
      <xs:enumeration value="cql"/>
      <xs:enumeration value="cqleng"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="internalTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Types of intern sort/rank.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="basicSort"/>
      <xs:enumeration value="complexSort"/>
      <xs:enumeration value="random"/>
      <xs:enumeration value="rank"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="linkToType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="file"/>
      <xs:enumeration value="linkresolver"/>
      <xs:enumeration value="proxy"/>
      <xs:enumeration value="webservice"/>
      <xs:enumeration value="website"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="objectFormatType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The object formats that you can choose from to be returned by the service.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="recordStatusType">
    <xs:annotation>
      <xs:documentation xml:lang="en">the status of a given record.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="active"/>
      <xs:enumeration value="delete"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="outputTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The types of output that can be returned by the service.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="json"/>
      <xs:enumeration value="php"/>
      <xs:enumeration value="xml"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="relationDataType">
    <xs:annotation>
      <xs:documentation xml:lang="en">The types of relations that the service can return.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="full"/>
      <xs:enumeration value="type"/>
      <xs:enumeration value="uri"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="relationTypeType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Available relations can be found in infoSearchProfile in infoResponse.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="sortType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Available sort can be found in infoSorts in infoResponse</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:element name="trackingId" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Unique id to track this request</xs:documentation>
    </xs:annotation>
  </xs:element>
</xs:schema>
